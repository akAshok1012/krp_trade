name: ci
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'uat'
  workflow_dispatch:

jobs:
  build-container:
    runs-on: self-hosted
    env:
      DOCKER_REPOSITORY: xyloincadmin
      IMAGE_NAME: trademanager
      IMAGE_TAG: ${{ github.run_number }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: docker login -u ${{ env.DOCKER_REPOSITORY }} -p ${{ secrets.DOCKERPASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG="${GITHUB_RUN_NUMBER}"
          docker buildx create --use
          docker buildx build -t xyloincadmin/tradeui:$IMAGE_TAG . --push
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_BUILDKIT: 1
          DOCKERHUB_USERNAME: xyloincadmin   
    
      - name: Git Checkout
        uses: actions/checkout@v2
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
         image-ref: 'docker.io/xyloincadmin/tradeui:$IMAGE_TAG'
         format: 'table'
         exit-code: '1'
         ignore-unfixed: true
         vuln-type: 'os,library'
         severity: 'MEDIUM,HIGH,CRITICAL'        
      -
        name: Checkout
        uses: actions/checkout@v3
     
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
         charts_dir: /kprchart
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"        

      - name: Configure kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Check if Helm release exists & Install or Upgrade Helm Chart
        id: check_release
        run: |
           RELEASE_NAME=xy-ui
           if helm get $RELEASE_NAME > /dev/null 2>&1; then
               echo "Helm release $RELEASE_NAME already exists."
                helm upgrade $RELEASE_NAME kprchart
               echo "::set-output name=release_exists::true"
           else
               echo "Helm release $RELEASE_NAME does not exist."
                helm install $RELEASE_NAME kprchat 
               echo "::set-output name=release_exists::false"
           fi
